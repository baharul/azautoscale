version: 2.1
jobs:
  build:
    working_directory: ~/java
    docker:
      - image: 'circleci/openjdk:11-jdk-stretch'
    steps:
      - checkout
      - restore_cache:
          key: 'circleci-java-{{ checksum "pom.xml" }}'
      - run: 'mvn dependency:go-offline'
      - save_cache:
          paths:
            - ~/.m2
          key: 'circleci-java-{{ checksum "pom.xml" }}'
      - run:
          name: "build & package"
          command: |
            mvn verify sonar:sonar
            mvn test package
            mkdir -p artifact
            cp target/*.jar artifact/app.jar
            cd artifact
            zip ../app.zip app.jar
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push image
          command: |
            mvn clean install
            mkdir -p artifact
            cp target/*.jar artifact/app.jar
            cd artifact
            zip ../app.zip app.jar

      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: artifact/app.jar
      - store_artifacts:
          path: artifact/applicationinsights-agent-2.6.1.jar
      - store_artifacts:
          path: artifact/AI-Agent.xml
      - persist_to_workspace:
          root: ~/java
          paths:
            - app.zip
            - .dp.yaml
            - applicationinsights-agent-2.6.1.jar
            - AI-Agent.xml
            - version
            - .circleci/config.yml
  deploy-to-dev:
    docker:
      - image: mafgalaxy.azurecr.io/digitalplatform/dpdeployer:enableloganalytics 

        auth:
          username: $REGISTRY_UN
          password: $REGISTRY_PW
    steps:
      -
        attach_workspace:
          at: ~/config
      -
        run:
          command: |
            cd /dp
            ./deploy.sh .dp.yaml
  deploy-to-prod:
    docker:
      - image: mafgalaxy.azurecr.io/digitalplatform/dpdeployer:stable
        auth:
          username: $REGISTRY_UN
          password: $REGISTRY_PW
    steps:
      -
        attach_workspace:
          at: ~/config
      -
        run:
          command: |
            cd /dp
            export TAG=`cat config/version`
            ./deploy.sh prod.dp.yaml
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context:
            - SonarCloud
            - dpdeployer
      - deploy-to-dev:
          context: dpdeployer
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - deploy-to-prod-approval:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-to-prod:
          context: dpdeployer
          requires:
            - deploy-to-prod-approval 
          filters:
            branches:
              only:
                - master